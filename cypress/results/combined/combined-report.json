{
  "stats": {
    "suites": 4,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-06-10T19:32:13.776Z",
    "end": "2025-06-10T19:37:29.896Z",
    "duration": 316120
  },
  "results": [
    {
      "uuid": "347db799-ef95-4280-b5c5-ec7e79b0b690",
      "title": "",
      "fullFile": "cypress\\e2e\\EmployeeCRUD.cy.ts",
      "file": "cypress\\e2e\\EmployeeCRUD.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b2a12460-9465-4a49-af67-81fdbeb73f84",
          "title": "Add,assign User,edit,delete Employee",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fill out the Add Employee form and save it",
              "fullTitle": "Add,assign User,edit,delete Employee should fill out the Add Employee form and save it",
              "timedOut": null,
              "duration": 25894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "pimEmployeeListPage.fillBasicEmployeeForm();\nsharedElements.getSaveButton().click();\nsharedElements.getSuccessfullySavedToastMessage().should('be.visible');\ncy.url().should('match', /\\/pim\\/viewPersonalDetails\\/empNumber\\/\\d+$/);\npimEmployeePersonalDetailsPage.getPersonalDetailsPageTitle().should('be.visible');",
              "err": {},
              "uuid": "6089f79b-5a52-40fb-b469-b05d4e161d9d",
              "parentUUID": "b2a12460-9465-4a49-af67-81fdbeb73f84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create the login details toEmployee",
              "fullTitle": "Add,assign User,edit,delete Employee should create the login details toEmployee",
              "timedOut": null,
              "duration": 19507,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomUsername = `TestUser#${(0, dataGenerator_1.generateRandomString)(5)}`;\nconst randomPassword = `TestPassword${(0, dataGenerator_1.generateRandomString)(5)}`;\npimEmployeeListPage.fillBasicEmployeeForm();\npimEmployeeListPage.getCreateLoginDetailsToggleButton().should('be.visible').click();\naddUserPage.getUserNameInput().type(randomUsername);\naddUserPage.getUserNameInput().should('have.value', randomUsername);\naddUserPage.getPasswordInput().type(randomPassword);\naddUserPage.getConfirmPasswordInput().type(randomPassword);\naddUserPage.getUserNameInput().should('have.value', randomUsername);\nsharedElements.getSaveButton().click();\nsharedElements.getSuccessfullySavedToastMessage().should('be.visible');",
              "err": {},
              "uuid": "3d919a36-ccea-4db5-bc45-3ee1a0d3f366",
              "parentUUID": "b2a12460-9465-4a49-af67-81fdbeb73f84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should edit Employee personal details",
              "fullTitle": "Add,assign User,edit,delete Employee should edit Employee personal details",
              "timedOut": null,
              "duration": 23845,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//1. add new Employee\npimEmployeeListPage.fillBasicEmployeeForm()\n    .then(({ employeeId, firstName, lastName, middleName }) => {\n    sharedElements.getSaveButton().click();\n    sharedElements.getSuccessfullySavedToastMessage().should('be.visible');\n    //2. after Employee successfully created, you'll be navigated to the Personal Details Page        cy.url().should('match', /\\/pim\\/viewPersonalDetails\\/empNumber\\/\\d+$/);\n    pimEmployeePersonalDetailsPage.getPersonalDetailsPageTitle().should('be.visible');\n    //3. assert that Employee's first, middle, last name and ID are successfully poopulated \n    pimEmployeeListPage.getEmployeeFirtsName().should('have.value', firstName);\n    pimEmployeeListPage.getEmployeeLastName().should('have.value', lastName);\n    pimEmployeeListPage.getEmployeeMiddleName().should('have.value', middleName);\n    //4. change Employee's Marital Status to \"Other\"\n    pimEmployeePersonalDetailsPage.getMaritalStatus().click();\n    cy.contains(\"Other\").click();\n    //5. Save the update\n    sharedElements.getSaveButton().click();\n    //6. Assert the update toast message\n    sharedElements.getSuccessfullyUpdatedToastMessage().should('be.visible');\n});",
              "err": {},
              "uuid": "e6ffb96d-8c42-4ab0-adc5-450bcc37efb8",
              "parentUUID": "b2a12460-9465-4a49-af67-81fdbeb73f84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete the Employee from the list",
              "fullTitle": "Add,assign User,edit,delete Employee should delete the Employee from the list",
              "timedOut": null,
              "duration": 24846,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "pimEmployeeListPage.fillBasicEmployeeForm().then(({ employeeId }) => {\n    sharedElements.getSaveButton().click();\n    sharedElements.getSuccessfullySavedToastMessage().should('be.visible');\n    cy.contains('Employee List').click();\n    cy.url().should('include', '/pim/viewEmployeeList');\n    pimEmployeeListPage.getEmployeeId().type(employeeId);\n    sharedElements.getSearchButton().click();\n    pimEmployeeListPage.getSelectCheckbox().click();\n    sharedElements.getDeleteSelectedButton().click();\n    sharedElements.getYesDeleteButton().click();\n    sharedElements.getSuccessfullyDeletedToastMessage().should('be.visible');\n    sharedElements.getNoRecordsFoundToastMessage().should('be.visible');\n});",
              "err": {},
              "uuid": "64adfe67-49b1-4cf5-a4fa-b8fd1761605a",
              "parentUUID": "b2a12460-9465-4a49-af67-81fdbeb73f84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6089f79b-5a52-40fb-b469-b05d4e161d9d",
            "3d919a36-ccea-4db5-bc45-3ee1a0d3f366",
            "e6ffb96d-8c42-4ab0-adc5-450bcc37efb8",
            "64adfe67-49b1-4cf5-a4fa-b8fd1761605a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 94092,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bea4886e-1bd5-460c-9777-0f50ba0ad009",
      "title": "",
      "fullFile": "cypress\\e2e\\EmployeeContactDetailsValidations.cy.ts",
      "file": "cypress\\e2e\\EmployeeContactDetailsValidations.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c9427df-4082-474d-a915-c8475d7ead29",
          "title": "Validate Employee contact details inputs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fill out valid contact details",
              "fullTitle": "Validate Employee contact details inputs should fill out valid contact details",
              "timedOut": null,
              "duration": 34998,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "pimEmployeeListPage.fillBasicEmployeeForm();\nsharedElements.getSaveButton().click();\nsharedElements.getSuccessfullySavedToastMessage().should('be.visible');\ncy.url().should('match', /empNumber\\/\\d+$/);\npimEmployeePersonalDetailsPage.getPersonalDetailsPageTitle().should('be.visible');\ncy.get('.orangehrm-tabs-wrapper').should('be.visible');\npimEmployeePersonalDetailsPage.getContactDetailsTab().click();\npimEmployeeContactDetailsPage.fillContactDetailsForm();\nsharedElements.getSaveButton().click();\nsharedElements.getSuccessfullyUpdatedToastMessage().should('be.visible');",
              "err": {},
              "uuid": "3091ec94-db83-458c-b11a-2bb79294dd2e",
              "parentUUID": "9c9427df-4082-474d-a915-c8475d7ead29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate inputs",
              "fullTitle": "Validate Employee contact details inputs should validate inputs",
              "timedOut": null,
              "duration": 34473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "pimEmployeeListPage.fillBasicEmployeeForm();\nsharedElements.getSaveButton().click();\nsharedElements.getSuccessfullySavedToastMessage().should('be.visible');\ncy.url().should('match', /empNumber\\/\\d+$/);\npimEmployeePersonalDetailsPage.getPersonalDetailsPageTitle().should('be.visible');\ncy.get('.orangehrm-tabs-wrapper').should('be.visible');\npimEmployeePersonalDetailsPage.getContactDetailsTab().click();\n//velidations and assertions\npimEmployeeContactDetailsPage.getStreet1InputBox()\n    .click().type((0, dataGenerator_1.generateRandomString)(71));\nsharedElements.getCharsExceedValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getStreet2InputBox()\n    .click().type((0, dataGenerator_1.generateRandomString)(71));\nsharedElements.getCharsExceedValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getStateProvinceInputBox()\n    .click().type((0, dataGenerator_1.generateRandomString)(71));\nsharedElements.getCharsExceedValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getZipPostalCodeInputBox()\n    .click().type((0, dataGenerator_1.generateRandomString)(71));\nsharedElements.getCharsExceedValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getHomePhoneInputBox()\n    .click().type((0, dataGenerator_1.generateRandomInvalidPhoneNumber)());\nsharedElements.getPhoneNumberValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getMobilePhoneInputBox()\n    .click().type((0, dataGenerator_1.generateRandomInvalidPhoneNumber)());\nsharedElements.getPhoneNumberValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getWorkPhoneInputBox()\n    .click().type((0, dataGenerator_1.generateRandomInvalidPhoneNumber)());\nsharedElements.getPhoneNumberValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getWorkEmailInputBox()\n    .click().type((0, dataGenerator_1.generateRandomString)(10));\nsharedElements.getEmailValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getOtherEmailInputBox()\n    .click().type((0, dataGenerator_1.generateRandomString)(10));\nsharedElements.getEmailValidationMessage().should('be.visible');",
              "err": {},
              "uuid": "7338709f-dee5-497d-ba7c-ce58e1168e5a",
              "parentUUID": "9c9427df-4082-474d-a915-c8475d7ead29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3091ec94-db83-458c-b11a-2bb79294dd2e",
            "7338709f-dee5-497d-ba7c-ce58e1168e5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 69471,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9556afa3-1ddf-4c7c-9aa2-6b5eda497fe3",
      "title": "",
      "fullFile": "cypress\\e2e\\UserCRUD.cy.ts",
      "file": "cypress\\e2e\\UserCRUD.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f6c04d7-be09-45ff-b9f1-dea8e271e946",
          "title": "User CRUD Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add new user",
              "fullTitle": "User CRUD Test Suite should add new user",
              "timedOut": null,
              "duration": 30894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "addUserPage.fillBasicUserForm();\nsharedElements.getSuccessfullySavedToastMessage().should('be.visible');",
              "err": {},
              "uuid": "49e4c4ca-8e55-4e61-be07-3e0a31334da6",
              "parentUUID": "0f6c04d7-be09-45ff-b9f1-dea8e271e946",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate Username and Password for wrong number of characters",
              "fullTitle": "User CRUD Test Suite should validate Username and Password for wrong number of characters",
              "timedOut": null,
              "duration": 18576,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//addUserPage.fillBasicUserForm();\naddUserPage.getUserRoleSelectDropdown().click();\ncy.contains('ESS').click();\naddUserPage.getStatusSelectDropdown().click();\ncy.contains('Enabled').click();\naddUserPage.getEmployeeNameAutocomplete().type(\"a\");\ncy.wait(5000);\ncy.get('.oxd-autocomplete-dropdown').should('be.visible').first().click();\naddUserPage.getUserNameInput().click().type('Name');\n//cy.wait(5000);\ncy.contains('.oxd-text', 'Should be at least 5 characters').should('be.visible');\naddUserPage.getPasswordInput().click().type('Pass');\n//cy.wait(5000);\ncy.contains('.oxd-text', 'Should have at least 7 characters').should('be.visible');\n//cy.wait(5000);\naddUserPage.getConfirmPasswordInput().click().type('Pass');\ncy.contains('.oxd-text', 'Should have at least 7 characters').should('be.visible');",
              "err": {},
              "uuid": "0bd1bbf0-57fd-46ed-ad64-c140b8d1af05",
              "parentUUID": "0f6c04d7-be09-45ff-b9f1-dea8e271e946",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate required inputs",
              "fullTitle": "User CRUD Test Suite should validate required inputs",
              "timedOut": null,
              "duration": 10248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "addUserPage.getSaveButton().click();\ncy.contains('.oxd-label', 'User Role')\n    .parents('.oxd-input-group')\n    .contains('.oxd-text', 'Required').should('be.visible');\ncy.contains('.oxd-label', 'Employee Name')\n    .parents('.oxd-input-group')\n    .contains('.oxd-text', 'Required').should('be.visible');\ncy.contains('.oxd-label', 'Status')\n    .parents('.oxd-input-group')\n    .contains('.oxd-text', 'Required').should('be.visible');\ncy.contains('.oxd-label', 'Username')\n    .parents('.oxd-input-group')\n    .contains('.oxd-text', 'Required').should('be.visible');\ncy.contains('.oxd-label', 'Password')\n    .parents('.oxd-input-group')\n    .contains('.oxd-text', 'Required').should('be.visible');",
              "err": {},
              "uuid": "61ab36a0-7a3d-4e65-b096-deceb6b84525",
              "parentUUID": "0f6c04d7-be09-45ff-b9f1-dea8e271e946",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete the user",
              "fullTitle": "User CRUD Test Suite should delete the user",
              "timedOut": null,
              "duration": 31818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "addUserPage.fillBasicUserForm()\n    .then(({ user }) => {\n    sharedElements.getSuccessfullySavedToastMessage().should('be.visible');\n    cy.url({ timeout: 5000 }).should('include', '/admin/viewSystemUsers');\n    addUserPage.getUserNameInput().click({ timeout: 5000 }).type(user);\n    sharedElements.getSearchButton().click();\n    cy.get('.oxd-icon.bi-trash').click({ timeout: 5000 });\n    cy.contains('.oxd-button--label-danger', 'Yes, Delete').click({ timeout: 5000 });\n    sharedElements.getSuccessfullyDeletedToastMessage().should('be.visible');\n    sharedElements.getNoRecordsFoundToastMessage().should('be.visible');\n});",
              "err": {},
              "uuid": "59bd3ff7-06e4-48b1-99df-21d496f7c432",
              "parentUUID": "0f6c04d7-be09-45ff-b9f1-dea8e271e946",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49e4c4ca-8e55-4e61-be07-3e0a31334da6",
            "0bd1bbf0-57fd-46ed-ad64-c140b8d1af05",
            "61ab36a0-7a3d-4e65-b096-deceb6b84525",
            "59bd3ff7-06e4-48b1-99df-21d496f7c432"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 91536,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "35f11059-d8be-40d5-8e69-fa4f1501ca9c",
      "title": "",
      "fullFile": "cypress\\e2e\\login.cy.ts",
      "file": "cypress\\e2e\\login.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "247ac5e3-b1f6-430c-87fb-878795a76cba",
          "title": "OrangeHRM Login Page Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow a user to log in with valid credentials using custom command",
              "fullTitle": "OrangeHRM Login Page Tests should allow a user to log in with valid credentials using custom command",
              "timedOut": null,
              "duration": 7580,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load the 'validUser' data from users.json fixture\ncy.fixture('users').then((users) => {\n    // Use the data from the fixture\n    cy.createLogin(users.validUser.username, users.validUser.password);\n});\ncy.url().should('include', '/dashboard');\ncy.contains('Dashboard').should('be.visible');",
              "err": {},
              "uuid": "44f0a04c-b8e3-4a1a-9bce-d6b828db7155",
              "parentUUID": "247ac5e3-b1f6-430c-87fb-878795a76cba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display an error for invalid credentials using Page Object",
              "fullTitle": "OrangeHRM Login Page Tests should display an error for invalid credentials using Page Object",
              "timedOut": null,
              "duration": 3539,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load the 'invalidUser' data from users.json fixture\ncy.fixture('users').then((users) => {\n    // Use the data from the fixture with LoginPage's login method\n    loginPage.login(users.invalidUser.username, users.invalidUser.password);\n});\nloginPage.getInvalidCredentialsErrorMessage().should('be.visible').and('contain.text', 'Invalid credentials');",
              "err": {},
              "uuid": "c69486cd-000c-4cb4-8ee8-2951f9e57ce8",
              "parentUUID": "247ac5e3-b1f6-430c-87fb-878795a76cba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display required error messages for empty fields",
              "fullTitle": "OrangeHRM Login Page Tests should display required error messages for empty fields",
              "timedOut": null,
              "duration": 1563,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// This test doesn't use user data, so it remains unchanged\nloginPage.getLoginButton().click();\nloginPage.getRequiredErrorMessage('username').should('be.visible');\nloginPage.getRequiredErrorMessage('password').should('be.visible');",
              "err": {},
              "uuid": "8d23aa02-29ad-46e2-94e7-0abf66a33c67",
              "parentUUID": "247ac5e3-b1f6-430c-87fb-878795a76cba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44f0a04c-b8e3-4a1a-9bce-d6b828db7155",
            "c69486cd-000c-4cb4-8ee8-2951f9e57ce8",
            "8d23aa02-29ad-46e2-94e7-0abf66a33c67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12682,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "6.2.0"
    }
  }
}