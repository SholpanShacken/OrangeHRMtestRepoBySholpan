{
  "stats": {
    "suites": 4,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-06-11T22:01:19.605Z",
    "end": "2025-06-11T22:05:12.569Z",
    "duration": 232964
  },
  "results": [
    {
      "uuid": "61e3f640-b9b1-4c9c-9b5b-0ca440a1e581",
      "title": "",
      "fullFile": "cypress\\e2e\\EmployeeCRUD.cy.ts",
      "file": "cypress\\e2e\\EmployeeCRUD.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "34523456-c2f2-4b42-bb48-62fe5a8ed1da",
          "title": "Add,assign User,edit,delete Employee",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fill out the Add Employee form and save it",
              "fullTitle": "Add,assign User,edit,delete Employee should fill out the Add Employee form and save it",
              "timedOut": null,
              "duration": 14810,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "pimEmployeeListPage.fillBasicEmployeeForm();\nsharedElements.getSaveButton().click();\nsharedElements.getSuccessfullySavedToastMessage().should('be.visible');\ncy.url().should('match', /\\/pim\\/viewPersonalDetails\\/empNumber\\/\\d+$/);\npimEmployeePersonalDetailsPage.getPersonalDetailsPageTitle().should('be.visible');",
              "err": {},
              "uuid": "32b7b806-a31e-4db8-a6a8-d2aea9ad3acd",
              "parentUUID": "34523456-c2f2-4b42-bb48-62fe5a8ed1da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create the login details toEmployee",
              "fullTitle": "Add,assign User,edit,delete Employee should create the login details toEmployee",
              "timedOut": null,
              "duration": 14129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomUsername = `TestUser#${(0, dataGenerator_1.generateRandomString)(5)}`;\nconst randomPassword = `TestPassword${(0, dataGenerator_1.generateRandomString)(5)}`;\npimEmployeeListPage.fillBasicEmployeeForm();\npimEmployeeListPage.getCreateLoginDetailsToggleButton().should('be.visible').click();\naddUserPage.getUserNameInput().type(randomUsername);\naddUserPage.getUserNameInput().should('have.value', randomUsername);\naddUserPage.getPasswordInput().type(randomPassword);\naddUserPage.getConfirmPasswordInput().type(randomPassword);\naddUserPage.getUserNameInput().should('have.value', randomUsername);\nsharedElements.getSaveButton().click();\nsharedElements.getSuccessfullySavedToastMessage().should('be.visible');",
              "err": {},
              "uuid": "183f236e-8762-46ac-9d90-f54180f9520d",
              "parentUUID": "34523456-c2f2-4b42-bb48-62fe5a8ed1da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should edit Employee personal details",
              "fullTitle": "Add,assign User,edit,delete Employee should edit Employee personal details",
              "timedOut": null,
              "duration": 20149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//1. add new Employee\npimEmployeeListPage.fillBasicEmployeeForm()\n    .then(({ employeeId, firstName, lastName, middleName }) => {\n    sharedElements.getSaveButton().click();\n    sharedElements.getSuccessfullySavedToastMessage().should('be.visible');\n    //2. after Employee successfully created, you'll be navigated to the Personal Details Page        cy.url().should('match', /\\/pim\\/viewPersonalDetails\\/empNumber\\/\\d+$/);\n    pimEmployeePersonalDetailsPage.getPersonalDetailsPageTitle().should('be.visible');\n    //3. assert that Employee's first, middle, last name and ID are successfully poopulated \n    pimEmployeeListPage.getEmployeeFirtsName().should('have.value', firstName);\n    pimEmployeeListPage.getEmployeeLastName().should('have.value', lastName);\n    pimEmployeeListPage.getEmployeeMiddleName().should('have.value', middleName);\n    //4. change Employee's Marital Status to \"Other\"\n    pimEmployeePersonalDetailsPage.getMaritalStatus().click();\n    cy.contains(\"Other\").click();\n    //5. Save the update\n    sharedElements.getSaveButton().click();\n    //6. Assert the update toast message\n    sharedElements.getSuccessfullyUpdatedToastMessage().should('be.visible');\n});",
              "err": {},
              "uuid": "672b52af-335a-4f0f-98f3-d9ca41b9ad4e",
              "parentUUID": "34523456-c2f2-4b42-bb48-62fe5a8ed1da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete the Employee from the list",
              "fullTitle": "Add,assign User,edit,delete Employee should delete the Employee from the list",
              "timedOut": null,
              "duration": 24963,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "pimEmployeeListPage.fillBasicEmployeeForm().then(({ employeeId }) => {\n    sharedElements.getSaveButton().click();\n    sharedElements.getSuccessfullySavedToastMessage().should('be.visible');\n    cy.contains('Employee List').click();\n    cy.url().should('include', '/pim/viewEmployeeList');\n    pimEmployeeListPage.getEmployeeId().type(employeeId);\n    sharedElements.getSearchButton().click();\n    pimEmployeeListPage.getSelectCheckbox().click();\n    sharedElements.getDeleteSelectedButton().click();\n    sharedElements.getYesDeleteButton().click();\n    sharedElements.getSuccessfullyDeletedToastMessage().should('be.visible');\n    sharedElements.getNoRecordsFoundToastMessage().should('be.visible');\n});",
              "err": {},
              "uuid": "12a17f1d-f4fa-4d44-9ac3-cb23dfab3543",
              "parentUUID": "34523456-c2f2-4b42-bb48-62fe5a8ed1da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32b7b806-a31e-4db8-a6a8-d2aea9ad3acd",
            "183f236e-8762-46ac-9d90-f54180f9520d",
            "672b52af-335a-4f0f-98f3-d9ca41b9ad4e",
            "12a17f1d-f4fa-4d44-9ac3-cb23dfab3543"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 74051,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4878add0-d34b-4b4d-a269-d474a2a17aac",
      "title": "",
      "fullFile": "cypress\\e2e\\EmployeeContactDetailsValidations.cy.ts",
      "file": "cypress\\e2e\\EmployeeContactDetailsValidations.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "68103544-dd06-4c60-b788-44c9990eda18",
          "title": "Validate Employee contact details inputs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fill out valid contact details",
              "fullTitle": "Validate Employee contact details inputs should fill out valid contact details",
              "timedOut": null,
              "duration": 36383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "pimEmployeeListPage.fillBasicEmployeeForm();\nsharedElements.getSaveButton().click();\nsharedElements.getSuccessfullySavedToastMessage().should('be.visible');\ncy.url().should('match', /empNumber\\/\\d+$/);\npimEmployeePersonalDetailsPage.getPersonalDetailsPageTitle().should('be.visible');\ncy.get('.orangehrm-tabs-wrapper').should('be.visible');\npimEmployeePersonalDetailsPage.getContactDetailsTab().click();\npimEmployeeContactDetailsPage.fillContactDetailsForm();\nsharedElements.getSaveButton().click();\nsharedElements.getSuccessfullyUpdatedToastMessage().should('be.visible');",
              "err": {},
              "uuid": "5e466f12-a4f9-48e4-917c-9e8276c4c545",
              "parentUUID": "68103544-dd06-4c60-b788-44c9990eda18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate inputs",
              "fullTitle": "Validate Employee contact details inputs should validate inputs",
              "timedOut": null,
              "duration": 27843,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "pimEmployeeListPage.fillBasicEmployeeForm();\nsharedElements.getSaveButton().click();\nsharedElements.getSuccessfullySavedToastMessage().should('be.visible');\ncy.url().should('match', /empNumber\\/\\d+$/);\npimEmployeePersonalDetailsPage.getPersonalDetailsPageTitle().should('be.visible');\ncy.get('.orangehrm-tabs-wrapper').should('be.visible');\npimEmployeePersonalDetailsPage.getContactDetailsTab().click();\n//velidations and assertions\npimEmployeeContactDetailsPage.getStreet1InputBox()\n    .click().type((0, dataGenerator_1.generateRandomString)(71));\nsharedElements.getCharsExceedValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getStreet2InputBox()\n    .click().type((0, dataGenerator_1.generateRandomString)(71));\nsharedElements.getCharsExceedValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getStateProvinceInputBox()\n    .click().type((0, dataGenerator_1.generateRandomString)(71));\nsharedElements.getCharsExceedValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getZipPostalCodeInputBox()\n    .click().type((0, dataGenerator_1.generateRandomString)(71));\nsharedElements.getCharsExceedValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getHomePhoneInputBox()\n    .click().type((0, dataGenerator_1.generateRandomInvalidPhoneNumber)());\nsharedElements.getPhoneNumberValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getMobilePhoneInputBox()\n    .click().type((0, dataGenerator_1.generateRandomInvalidPhoneNumber)());\nsharedElements.getPhoneNumberValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getWorkPhoneInputBox()\n    .click().type((0, dataGenerator_1.generateRandomInvalidPhoneNumber)());\nsharedElements.getPhoneNumberValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getWorkEmailInputBox()\n    .click().type((0, dataGenerator_1.generateRandomString)(10));\nsharedElements.getEmailValidationMessage().should('be.visible');\npimEmployeeContactDetailsPage.getOtherEmailInputBox()\n    .click().type((0, dataGenerator_1.generateRandomString)(10));\nsharedElements.getEmailValidationMessage().should('be.visible');",
              "err": {},
              "uuid": "462fb3b1-eba0-4077-83ac-7f8796d41e6a",
              "parentUUID": "68103544-dd06-4c60-b788-44c9990eda18",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e466f12-a4f9-48e4-917c-9e8276c4c545",
            "462fb3b1-eba0-4077-83ac-7f8796d41e6a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 64226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a29e06f8-4b2f-46e2-8cb4-7daa8ebfa905",
      "title": "",
      "fullFile": "cypress\\e2e\\UserCRUD.cy.ts",
      "file": "cypress\\e2e\\UserCRUD.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "811288ce-526f-4cab-98bf-4b09b6b84bec",
          "title": "User CRUD Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add new user",
              "fullTitle": "User CRUD Test Suite should add new user",
              "timedOut": null,
              "duration": 20106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "addUserPage.fillBasicUserForm();\nsharedElements.getSuccessfullySavedToastMessage().should('be.visible');",
              "err": {},
              "uuid": "5bdf3fe9-a857-470a-bbcc-7fe239db2670",
              "parentUUID": "811288ce-526f-4cab-98bf-4b09b6b84bec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate Username and Password for wrong number of characters",
              "fullTitle": "User CRUD Test Suite should validate Username and Password for wrong number of characters",
              "timedOut": null,
              "duration": 14173,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//addUserPage.fillBasicUserForm();\naddUserPage.getUserRoleSelectDropdown().click();\ncy.contains('ESS').click();\naddUserPage.getStatusSelectDropdown().click();\ncy.contains('Enabled').click();\naddUserPage.getEmployeeNameAutocomplete().type(\"a\");\ncy.wait(5000);\ncy.get('.oxd-autocomplete-dropdown').should('be.visible').first().click();\naddUserPage.getUserNameInput().click().type('Name');\n//cy.wait(5000);\ncy.contains('.oxd-text', 'Should be at least 5 characters').should('be.visible');\naddUserPage.getPasswordInput().click().type('Pass');\n//cy.wait(5000);\ncy.contains('.oxd-text', 'Should have at least 7 characters').should('be.visible');\n//cy.wait(5000);\naddUserPage.getConfirmPasswordInput().click().type('Pass');\ncy.contains('.oxd-text', 'Should have at least 7 characters').should('be.visible');",
              "err": {},
              "uuid": "4b734960-96f7-4b27-8266-4a482e72aa55",
              "parentUUID": "811288ce-526f-4cab-98bf-4b09b6b84bec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate required inputs",
              "fullTitle": "User CRUD Test Suite should validate required inputs",
              "timedOut": null,
              "duration": 7211,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "addUserPage.getSaveButton().click();\ncy.contains('.oxd-label', 'User Role')\n    .parents('.oxd-input-group')\n    .contains('.oxd-text', 'Required').should('be.visible');\ncy.contains('.oxd-label', 'Employee Name')\n    .parents('.oxd-input-group')\n    .contains('.oxd-text', 'Required').should('be.visible');\ncy.contains('.oxd-label', 'Status')\n    .parents('.oxd-input-group')\n    .contains('.oxd-text', 'Required').should('be.visible');\ncy.contains('.oxd-label', 'Username')\n    .parents('.oxd-input-group')\n    .contains('.oxd-text', 'Required').should('be.visible');\ncy.contains('.oxd-label', 'Password')\n    .parents('.oxd-input-group')\n    .contains('.oxd-text', 'Required').should('be.visible');",
              "err": {},
              "uuid": "469e088a-45c6-4459-93e7-e1a543bfa025",
              "parentUUID": "811288ce-526f-4cab-98bf-4b09b6b84bec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete the user",
              "fullTitle": "User CRUD Test Suite should delete the user",
              "timedOut": null,
              "duration": 24476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "addUserPage.fillBasicUserForm()\n    .then(({ user }) => {\n    sharedElements.getSuccessfullySavedToastMessage().should('be.visible');\n    cy.url({ timeout: 5000 }).should('include', '/admin/viewSystemUsers');\n    addUserPage.getUserNameInput().click({ timeout: 5000 }).type(user);\n    sharedElements.getSearchButton().click();\n    cy.get('.oxd-icon.bi-trash').click({ timeout: 5000 });\n    cy.contains('.oxd-button--label-danger', 'Yes, Delete').click({ timeout: 5000 });\n    sharedElements.getSuccessfullyDeletedToastMessage().should('be.visible');\n    sharedElements.getNoRecordsFoundToastMessage().should('be.visible');\n});",
              "err": {},
              "uuid": "6cf17cc8-c014-4e81-8a0f-6b72fc7e8da1",
              "parentUUID": "811288ce-526f-4cab-98bf-4b09b6b84bec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5bdf3fe9-a857-470a-bbcc-7fe239db2670",
            "4b734960-96f7-4b27-8266-4a482e72aa55",
            "469e088a-45c6-4459-93e7-e1a543bfa025",
            "6cf17cc8-c014-4e81-8a0f-6b72fc7e8da1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 65966,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ca043a01-54f0-42f9-8513-1aa29e5dc3a2",
      "title": "",
      "fullFile": "cypress\\e2e\\login.cy.ts",
      "file": "cypress\\e2e\\login.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5633cd9c-2564-4b9f-ad8e-639c69c700ee",
          "title": "OrangeHRM Login Page Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow a user to log in with valid credentials using custom command",
              "fullTitle": "OrangeHRM Login Page Tests should allow a user to log in with valid credentials using custom command",
              "timedOut": null,
              "duration": 4498,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load the 'validUser' data from users.json fixture\ncy.fixture('users').then((users) => {\n    // Use the data from the fixture\n    cy.createLogin(users.validUser.username, users.validUser.password);\n});\ncy.url().should('include', '/dashboard');\ncy.contains('Dashboard').should('be.visible');",
              "err": {},
              "uuid": "6e657f68-ed22-45c7-83ce-a47605862dbc",
              "parentUUID": "5633cd9c-2564-4b9f-ad8e-639c69c700ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display an error for invalid credentials using Page Object",
              "fullTitle": "OrangeHRM Login Page Tests should display an error for invalid credentials using Page Object",
              "timedOut": null,
              "duration": 2917,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load the 'invalidUser' data from users.json fixture\ncy.fixture('users').then((users) => {\n    // Use the data from the fixture with LoginPage's login method\n    loginPage.login(users.invalidUser.username, users.invalidUser.password);\n});\nloginPage.getInvalidCredentialsErrorMessage().should('be.visible').and('contain.text', 'Invalid credentials');",
              "err": {},
              "uuid": "4c6b4b46-35fa-4bdd-a4b5-1277493d8043",
              "parentUUID": "5633cd9c-2564-4b9f-ad8e-639c69c700ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display required error messages for empty fields",
              "fullTitle": "OrangeHRM Login Page Tests should display required error messages for empty fields",
              "timedOut": null,
              "duration": 858,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// This test doesn't use user data, so it remains unchanged\nloginPage.getLoginButton().click();\nloginPage.getRequiredErrorMessage('username').should('be.visible');\nloginPage.getRequiredErrorMessage('password').should('be.visible');",
              "err": {},
              "uuid": "95821cf9-5c22-4fb9-aaa0-33589ab9bcf5",
              "parentUUID": "5633cd9c-2564-4b9f-ad8e-639c69c700ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e657f68-ed22-45c7-83ce-a47605862dbc",
            "4c6b4b46-35fa-4bdd-a4b5-1277493d8043",
            "95821cf9-5c22-4fb9-aaa0-33589ab9bcf5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8273,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "6.2.0"
    }
  }
}